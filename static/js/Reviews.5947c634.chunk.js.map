{"version":3,"sources":["Components/Reviews/Reviews.js"],"names":["Reviews","movieId","useParams","state","useLocation","useState","reviews","setReviews","useEffect","getMoviesReviews","then","results","length","map","result","author","content","id"],"mappings":"6LA+BeA,UAzBC,WAAO,IACbC,EAAYC,cAAZD,QACAE,EAAUC,cAAVD,MAFY,EAGUE,oBAAc,OAALF,QAAK,IAALA,OAAA,EAAAA,EAAOG,UAAW,MAHrC,mBAGbA,EAHa,KAGJC,EAHI,KAQpB,OAJAC,qBAAU,WACRC,YAAiBR,GAASS,KAAKH,KAC9B,CAACN,IAGF,8BACE,8BACU,OAAPK,QAAO,IAAPA,OAAA,EAAAA,EAASK,QAAQC,QAChBN,EAAQK,QAAQE,KAAI,SAAAC,GAAM,OACxB,+BACE,6BAAKA,EAAOC,SACZ,4BAAID,EAAOE,YAFJF,EAAOG,OAMlB","file":"static/js/Reviews.5947c634.chunk.js","sourcesContent":["import { useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router';\n\nimport { getMoviesReviews } from '../Api/Api';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const { state } = useLocation();\n  const [reviews, setReviews] = useState(state?.reviews || null);\n  useEffect(() => {\n    getMoviesReviews(movieId).then(setReviews);\n  }, [movieId]);\n\n  return (\n    <div>\n      <ul>\n        {reviews?.results.length ? (\n          reviews.results.map(result => (\n            <li key={result.id}>\n              <h3>{result.author}</h3>\n              <p>{result.content}</p>\n            </li>\n          ))\n        ) : (\n          <p>We don't have any reviews for this movie yet!</p>\n        )}\n      </ul>\n    </div>\n  );\n};\nexport default Reviews;\n"],"sourceRoot":""}