{"version":3,"sources":["Components/Api/Api.js","Components/MoviesPage/MoviesPage.module.css","Components/MoviesPage/MoviesPage.js"],"names":["API_KEY","getPopularMovies","a","page","axios","get","res","data","getSearchedMovies","keyWord","getMovieDetails","movie_id","getMovieCredits","getMoviesReviews","defaults","baseURL","module","exports","SearchMoviesPage","state","useLocation","url","useRouteMatch","useState","setKeyWord","searchedMovies","setSearchedMovies","useEffect","then","className","s","form","onSubmit","event","preventDefault","type","placeholder","name","value","input","onChange","target","results","map","movie","to","pathname","id","original_title"],"mappings":"qWACMA,EAAU,mCAKT,SAAeC,IAAtB,+B,4CAAO,0CAAAC,EAAA,6DAAgCC,EAAhC,+BAAuC,EAAvC,SACaC,IAAMC,IAAN,oCACaL,EADb,iBAC6BG,IAF1C,cACCG,EADD,yBAIEA,EAAIC,MAJN,4C,sBAOA,SAAeC,EAAtB,kC,4CAAO,WAAiCC,GAAjC,6BAAAP,EAAA,6DAA0CC,EAA1C,+BAAiD,EAAjD,SACaC,IAAMC,IAAN,gCACSL,EADT,kBAC0BS,EAD1B,gCACyDN,EADzD,yBADb,cACCG,EADD,yBAIEA,EAAIC,MAJN,4C,sBAOA,SAAeG,EAAtB,kC,4CAAO,WAA+BC,GAA/B,eAAAT,EAAA,sEACaE,IAAMC,IAAN,iBACNM,EADM,oBACcX,EADd,oBADb,cACCM,EADD,yBAIEA,EAAIC,MAJN,4C,sBAOA,SAAeK,EAAtB,kC,4CAAO,WAA+BD,GAA/B,eAAAT,EAAA,sEACaE,IAAMC,IAAN,iBACNM,EADM,4BACsBX,EADtB,oBADb,cACCM,EADD,yBAIEA,EAAIC,MAJN,4C,sBAOA,SAAeM,EAAtB,kC,4CAAO,WAAgCF,GAAhC,6BAAAT,EAAA,6DAA0CC,EAA1C,+BAAiD,EAAjD,SACaC,IAAMC,IAAN,iBACNM,EADM,4BACsBX,EADtB,gCACqDG,IAFlE,cACCG,EADD,yBAIEA,EAAIC,MAJN,4C,sBA9BPH,IAAMU,SAASC,QAFE,gC,mBCDjBC,EAAOC,QAAU,CAAC,KAAO,yBAAyB,MAAQ,4B,wGC4D3CC,UAvDU,WAAO,IACtBC,EAAUC,cAAVD,MACAE,EAAQC,cAARD,IAFqB,EAGCE,oBAAc,OAALJ,QAAK,IAALA,OAAA,EAAAA,EAAOV,UAAW,IAH5B,mBAGtBA,EAHsB,KAGbe,EAHa,OAIeD,oBACrC,OAALJ,QAAK,IAALA,OAAA,EAAAA,EAAOM,iBAAkB,MALE,mBAItBA,EAJsB,KAINC,EAJM,KAsB7B,OALAC,qBAAU,YACJ,OAACR,QAAD,IAACA,OAAD,EAACA,EAAOV,UACZD,YAAiB,OAACW,QAAD,IAACA,OAAD,EAACA,EAAOV,SAASmB,KAAKF,KACtC,QAACP,QAAD,IAACA,OAAD,EAACA,EAAOV,UAGT,qCACE,uBAAMoB,UAAWC,IAAEC,KAAMC,SAZZ,SAAAC,GACfA,EAAMC,iBACN1B,YAAkBC,GAASmB,KAAKF,IAU9B,UACE,uBACES,KAAK,OACLC,YAAY,cACZC,KAAK,UACLC,MAAO7B,EACPoB,UAAWC,IAAES,MACbC,SAvBS,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAClBjB,EAAWiB,EAAOH,UAwBd,wBAAQH,KAAK,SAASN,UAAU,sBAAhC,uBAIF,6BACGJ,GACCA,EAAeiB,QAAQC,KAAI,SAAAC,GAAK,OAC9B,6BACE,cAAC,IAAD,CACEC,GAAI,CACFC,SAAS,GAAD,OAAKzB,EAAL,YAAYuB,EAAMG,IAC1B5B,MAAO,CAAEV,UAASY,QAHtB,SAMGuB,EAAMI,kBAPFJ,EAAMG","file":"static/js/MoviesPage.047ee78e.chunk.js","sourcesContent":["import axios from 'axios';\nconst API_KEY = '9188dc7af85ddfe1314f5060338d54ff';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\naxios.defaults.baseURL = BASE_URL;\n\nexport async function getPopularMovies(page = 1) {\n  const res = await axios.get(\n    `/trending/all/day?api_key=${API_KEY}&page=${page}`,\n  );\n  return res.data;\n}\n\nexport async function getSearchedMovies(keyWord, page = 1) {\n  const res = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${keyWord}&language=en-US&page=${page}&include_adult=false`,\n  );\n  return res.data;\n}\n\nexport async function getMovieDetails(movie_id) {\n  const res = await axios.get(\n    `/movie/${movie_id}?api_key=${API_KEY}&language=en-US`,\n  );\n  return res.data;\n}\n\nexport async function getMovieCredits(movie_id) {\n  const res = await axios.get(\n    `/movie/${movie_id}/credits?api_key=${API_KEY}&language=en-US`,\n  );\n  return res.data;\n}\n\nexport async function getMoviesReviews(movie_id, page = 1) {\n  const res = await axios.get(\n    `/movie/${movie_id}/reviews?api_key=${API_KEY}&language=en-US&page=${page}`,\n  );\n  return res.data;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"MoviesPage_form__2i0Nx\",\"input\":\"MoviesPage_input__2jWUL\"};","import { Link, useRouteMatch, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nimport { getSearchedMovies } from '../Api/Api';\nimport s from './MoviesPage.module.css';\n\nconst SearchMoviesPage = () => {\n  const { state } = useLocation();\n  const { url } = useRouteMatch();\n  const [keyWord, setKeyWord] = useState(state?.keyWord || '');\n  const [searchedMovies, setSearchedMovies] = useState(\n    state?.searchedMovies || null,\n  );\n\n  const onChange = ({ target }) => {\n    setKeyWord(target.value);\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n    getSearchedMovies(keyWord).then(setSearchedMovies);\n  };\n\n  useEffect(() => {\n    if (!state?.keyWord) return;\n    getSearchedMovies(state?.keyWord).then(setSearchedMovies);\n  }, [state?.keyWord]);\n\n  return (\n    <>\n      <form className={s.form} onSubmit={onSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Find movies\"\n          name=\"keyWord\"\n          value={keyWord}\n          className={s.input}\n          onChange={onChange}\n        />\n        <button type=\"submit\" className=\"input_submit_button\">\n          Search\n        </button>\n      </form>\n      <ul>\n        {searchedMovies &&\n          searchedMovies.results.map(movie => (\n            <li key={movie.id}>\n              <Link\n                to={{\n                  pathname: `${url}/${movie.id}`,\n                  state: { keyWord, url },\n                }}\n              >\n                {movie.original_title}\n              </Link>\n            </li>\n          ))}\n      </ul>\n    </>\n  );\n};\nexport default SearchMoviesPage;\n"],"sourceRoot":""}